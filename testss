# See if a config is being used and whether it injects filters
grep -iE 'filter-|services|tags|arns' ~/.prowler/config.yaml 2>/dev/null || echo "no prowler config"

# Also check if your shell exports default args
echo "PROWLER_ARGS=${PROWLER_ARGS:-<unset>}"



................

prowler aws -i --profile <p_full> --log-level DEBUG -M csv -o ./qi_out
grep -E "s3:|AccessDenied|Throttl|error" ./qi_out/*DEBUG*.log | sed -n '1,120p'


.....
# Buckets with null LocationConstraint (these are us-east-1)
for b in $(aws s3api list-buckets --profile <p_full> --query 'Buckets[].Name' --output text); do
  loc=$(aws s3api get-bucket-location --bucket "$b" --profile <p_full> --query 'LocationConstraint' --output text)
  [ "$loc" = "None" -o "$loc" = "null" -o "$loc" = "NoneType" ] && echo "$b"
done | wc -l


////////////////////////////

# Which buckets fail region lookup (most common cause)
aws s3api list-buckets --query 'Buckets[].Name' --output text \
| tr '\t' '\n' \
| while read -r b; do
    aws s3api get-bucket-location --bucket "$b" >/dev/null 2>&1 || echo "$b"
  done | tee buckets_access_denied.txt

wc -l buckets_access_denied.txt   # count of denied buckets

.......
aws s3api list-buckets --query 'Buckets[].Name' --output text \
| tr '\t' '\n' \
| while read -r b; do
    aws s3api get-bucket-location --bucket "$b" >/dev/null 2>&1 || echo x
  done \
| wc -l




???????????????????????????

# 1) Run Quick-Inventory cleanly and log everything
prowler aws -i -M csv,json --log-level DEBUG -o ./qi_out

# 2) Buckets Prowler recorded
awk -F';' 'NR==1{for(i=1;i<=NF;i++)h[$i]=i}
           NR>1 && $h["AWS_Service"]=="s3"{print $h["AWS_ResourceID"]}' \
  qi_out/*quick-inventory*.csv | sort -u > prowler_buckets.txt

# 3) Buckets the CLI sees
aws s3api list-buckets --query 'Buckets[].Name' --output text \
| tr '\t' '\n' | sort -u > cli_buckets.txt

# 4) Whatâ€™s missing in Prowler (count + sample)
comm -23 cli_buckets.txt prowler_buckets.txt | tee missing_in_prowler.txt
wc -l missing_in_prowler.txt
head -n 20 missing_in_prowler.txt

-------------------------

aws s3api list-buckets --query 'Buckets[].Name' --output text \
| tr '\t' '\n' \
| while read -r b; do
    out=$(aws s3api head-bucket --bucket "$b" 2>&1); rc=$?
    if [ $rc -eq 0 ]; then
      echo "OK,$b,200"
    else
      code=$(printf "%s" "$out" | grep -o 'Status Code: [0-9]\+' | awk '{print $3}')
      reason=$(printf "%s" "$out" | sed -n 's/.*\(AccessDenied\|Forbidden\|NotFound\|MovedPermanently\|PermanentRedirect\).*/\1/p' | head -n1)
      echo "FAIL,$b,${code:-?},${reason:-?}"
    fi
  done | tee headbucket_status.csv

# Quick counts
echo "OK count:   $(grep -c '^OK,'   headbucket_status.csv || true)"
echo "FAIL count: $(grep -c '^FAIL,' headbucket_status.csv || true)"

))))))))))))))))))))))))))))))))))))))




# Buckets your creds can see (ground truth)
aws s3api list-buckets --query 'Buckets[].Name' --output text \
| tr '\t' '\n' > /tmp/_buckets.txt

# Quick counter for any S3 API across all buckets
check_api() {
  api="$1"
  printf "%-28s" "$api:"
  denied=$(
    while read -r b; do
      aws s3api $api --bucket "$b" >/dev/null 2>&1 || echo x
    done < /tmp/_buckets.txt | wc -l
  )
  total=$(wc -l < /tmp/_buckets.txt)
  echo "$denied denied of $total"
}

# Run the usual QI culprits (most common blocker is TAGGING or POLICY STATUS)
check_api head-bucket
check_api get-bucket-tagging
check_api get-bucket-policy-status
check_api get-public-access-block
check_api get-encryption-configuration
check_api get-bucket-acl
check_api get-bucket-versioning
# (optional) legacy call used by some tools; 'None' means us-east-1, not a failure
check_api get-bucket-location


))))))))))))))))))))))))))))))))))))))))))))))))
aws iam list-attached-role-policies --role-name "$ROLE" \
  --query "AttachedPolicies[?PolicyName=='SecurityAudit' || PolicyName=='AmazonS3ReadOnlyAccess'].[PolicyName,PolicyArn]" \
  --output table
